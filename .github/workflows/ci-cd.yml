name: LeafPan应用自动部署到Kubernetes集群

# 触发条件：当代码推送到master分支时自动执行
on:
  push:
    branches: [ master ]

jobs:
  # 构建和部署任务
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      # ==================== 初始化阶段 ====================
      - name: 检出代码
        uses: actions/checkout@v4

      # ==================== 镜像仓库认证阶段 ====================
      - name: 登录阿里云容器镜像服务
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.ACR_REGISTRY }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: 验证镜像仓库权限
        run: |
          echo "开始验证ACR镜像仓库权限..."
          
          # 测试Docker登录
          docker login ${{ secrets.ACR_REGISTRY }} -u ${{ secrets.ACR_USERNAME }} -p ${{ secrets.ACR_PASSWORD }}
          
          # 验证仓库访问权限
          curl -I https://${{ secrets.ACR_REGISTRY }}/v2/ || echo "ACR registry访问失败"
          
          # 检查仓库列表权限
          curl -u ${{ secrets.ACR_USERNAME }}:${{ secrets.ACR_PASSWORD }} https://${{ secrets.ACR_REGISTRY }}/v2/_catalog || echo "无法获取仓库列表"
          
          echo "ACR镜像仓库权限验证完成"

      # ==================== 构建工具配置阶段 ====================
      - name: 配置Docker Buildx
        uses: docker/setup-buildx-action@v3

      # ==================== 后端构建阶段 ====================
      - name: 配置Java开发环境
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: 编译后端Java代码
        run: mvn clean package -DskipTests
        working-directory: ./backend

      - name: 构建并推送后端Docker镜像
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            crpi-kczczesrmgxok6ke.cn-hangzhou.personal.cr.aliyuncs.com/yangshengzhou/leafpan-backend:${{ github.sha }}
            crpi-kczczesrmgxok6ke.cn-hangzhou.personal.cr.aliyuncs.com/yangshengzhou/leafpan-backend:latest

      # ==================== 前端构建阶段 ====================
      - name: 配置Node.js开发环境
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: ./frontend/package-lock.json

      - name: 构建前端应用
        run: |
          npm install
          npm run build
        working-directory: ./frontend

      - name: 构建并推送前端Docker镜像
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: |
            crpi-kczczesrmgxok6ke.cn-hangzhou.personal.cr.aliyuncs.com/yangshengzhou/leafpan-frontend:${{ github.sha }}
            crpi-kczczesrmgxok6ke.cn-hangzhou.personal.cr.aliyuncs.com/yangshengzhou/leafpan-frontend:latest

      # ==================== Kubernetes部署阶段 ====================
      - name: 配置Kubernetes集群连接
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > ~/.kube/config
          kubectl get nodes

      - name: 创建Kubernetes命名空间
        run: kubectl apply -f k8s/namespace.yaml

      - name: 部署基础设施服务
        run: |
          # 部署MySQL数据库
          kubectl apply -f k8s/mysql-delop.yaml
          
          # 部署MinIO对象存储
          kubectl apply -f k8s/minio-delop.yaml
          
          # 等待基础设施服务就绪
          kubectl wait --for=condition=ready pod -l app=mysql -n leafpan --timeout=300s
          kubectl wait --for=condition=ready pod -l app=minio -n leafpan --timeout=300s

      - name: 部署后端应用配置
        run: kubectl apply -f k8s/backend-delop.yaml

      - name: 更新后端应用镜像
        run: |
          kubectl set image deployment/backend backend=crpi-kczczesrmgxok6ke.cn-hangzhou.personal.cr.aliyuncs.com/yangshengzhou/leafpan-backend:${{ github.sha }} -n leafpan
          kubectl rollout status deployment/backend -n leafpan

      - name: 部署前端应用配置
        run: kubectl apply -f k8s/frontend-delop.yaml

      - name: 更新前端应用镜像
        run: |
          kubectl set image deployment/frontend frontend=crpi-kczczesrmgxok6ke.cn-hangzhou.personal.cr.aliyuncs.com/yangshengzhou/leafpan-frontend:${{ github.sha }} -n leafpan
          kubectl rollout status deployment/frontend -n leafpan

      # ==================== 部署验证阶段 ====================
      - name: 验证部署状态
        run: |
          echo "检查Pod运行状态:"
          kubectl get pods -n leafpan
          
          echo "检查Service状态:"
          kubectl get services -n leafpan
          
          echo "LeafPan应用部署完成，所有服务已就绪"