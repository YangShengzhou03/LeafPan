apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-init-script
  namespace: leafpan
data:
  init.sql: |
    -- 若数据库存在则删除并重建
    DROP DATABASE IF EXISTS leafpan;
    CREATE DATABASE leafpan CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
    USE leafpan;

    -- 1. 用户表
    CREATE TABLE users (
        id CHAR(36) NOT NULL DEFAULT (UUID()) PRIMARY KEY COMMENT '用户ID(UUID)',
        email VARCHAR(100) NOT NULL UNIQUE COMMENT '邮箱',
        password VARCHAR(255) NOT NULL COMMENT '加密密码',
        nickname VARCHAR(50) NULL COMMENT '昵称',
        avatar VARCHAR(500) NULL COMMENT '头像URL',
        gender TINYINT NULL COMMENT '性别：0-未知，1-男，2-女',
        phone VARCHAR(20) NULL COMMENT '手机号码',
        role TINYINT NOT NULL DEFAULT 0 COMMENT '角色：0-普通，1-管理员',
        storage_quota BIGINT NOT NULL DEFAULT 1073741824 COMMENT '存储配额(字节，默认1GB)',
        used_storage BIGINT NOT NULL DEFAULT 0 COMMENT '已用空间(字节)',
        status TINYINT NOT NULL DEFAULT 1 COMMENT '状态：0-禁用，1-正常',
        last_login_time DATETIME NULL COMMENT '最后登录时间',
        last_login_ip VARCHAR(100) NULL COMMENT '最后登录IP',
        created_time DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
        updated_time DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
        INDEX idx_status (status),
        INDEX idx_role (role)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='用户表';

    -- 2. 文件夹表
    CREATE TABLE folders (
        id BIGINT AUTO_INCREMENT PRIMARY KEY COMMENT '文件夹ID',
        name VARCHAR(255) NOT NULL COMMENT '文件夹名称',
        parent_id BIGINT NOT NULL DEFAULT 0 COMMENT '父文件夹ID，0为根目录',
        user_id CHAR(36) NOT NULL COMMENT '所属用户ID',
        path VARCHAR(500) NOT NULL COMMENT '完整路径',
        is_deleted TINYINT NOT NULL DEFAULT 0 COMMENT '是否删除：0-否，1-是',
        created_time DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
        updated_time DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
        INDEX idx_user_parent (user_id, parent_id),
        INDEX idx_user_path (user_id, path(200)),
        INDEX idx_is_deleted (is_deleted),
        FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='文件夹表';

    -- 3. 文件表
    CREATE TABLE files (
        id BIGINT AUTO_INCREMENT PRIMARY KEY COMMENT '文件ID',
        name VARCHAR(255) NOT NULL COMMENT '文件名',
        original_name VARCHAR(255) NOT NULL COMMENT '原始文件名',
        folder_id BIGINT NOT NULL DEFAULT 0 COMMENT '所属文件夹ID',
        user_id CHAR(36) NOT NULL COMMENT '所属用户ID',
        size BIGINT NOT NULL DEFAULT 0 COMMENT '文件大小(字节)',
        mime_type VARCHAR(100) NULL COMMENT 'MIME类型',
        extension VARCHAR(20) NULL COMMENT '扩展名',
        storage_key VARCHAR(255) NOT NULL COMMENT 'MinIO存储key',
        md5 VARCHAR(32) NULL COMMENT 'MD5值',
        is_deleted TINYINT NOT NULL DEFAULT 0 COMMENT '是否删除：0-否，1-是',
        version INT NOT NULL DEFAULT 1 COMMENT '版本号',
        created_time DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
        updated_time DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
        INDEX idx_user_folder (user_id, folder_id),
        INDEX idx_storage_key (storage_key),
        INDEX idx_md5 (md5),
        INDEX idx_is_deleted (is_deleted),
        FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='文件表';

    -- 4. 分享表
    CREATE TABLE shares (
        id BIGINT AUTO_INCREMENT PRIMARY KEY COMMENT '分享ID',
        share_code VARCHAR(10) NOT NULL UNIQUE COMMENT '分享码',
        file_id BIGINT NULL COMMENT '文件ID',
        folder_id BIGINT NULL COMMENT '文件夹ID',
        user_id CHAR(36) NOT NULL COMMENT '分享者ID',
        share_type TINYINT NOT NULL DEFAULT 0 COMMENT '类型：0-公开，1-密码，2-私密',
        password VARCHAR(64) NULL COMMENT '分享密码(加密)',
        expire_time DATETIME NULL COMMENT '过期时间',
        download_count INT NOT NULL DEFAULT 0 COMMENT '下载次数',
        view_count INT NOT NULL DEFAULT 0 COMMENT '查看次数',
        is_active TINYINT NOT NULL DEFAULT 1 COMMENT '是否有效：0-无效，1-有效',
        created_time DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
        INDEX idx_user_id (user_id),
        INDEX idx_file_id (file_id),
        INDEX idx_expire_time (expire_time),
        INDEX idx_is_active (is_active),
        FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
        FOREIGN KEY (file_id) REFERENCES files(id) ON DELETE CASCADE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='分享表';

    -- 5. 操作日志表
    CREATE TABLE operation_logs (
        id BIGINT AUTO_INCREMENT PRIMARY KEY COMMENT '日志ID',
        user_id CHAR(36) NOT NULL COMMENT '用户ID',
        operation_type VARCHAR(50) NOT NULL COMMENT '操作类型',
        target_type VARCHAR(50) NOT NULL COMMENT '目标类型：file/folder/share',
        target_id VARCHAR(36) NULL COMMENT '目标ID',
        description VARCHAR(500) NULL COMMENT '操作描述',
        ip_address VARCHAR(100) NULL COMMENT 'IP地址',
        user_agent VARCHAR(500) NULL COMMENT '用户代理',
        created_time DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
        INDEX idx_user_id (user_id),
        INDEX idx_operation_type (operation_type),
        INDEX idx_created_time (created_time),
        INDEX idx_target (target_type, target_id),
        FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='操作日志表';

    -- 用户创建后自动生成根目录触发器
    DROP TRIGGER IF EXISTS after_user_insert;
    DELIMITER //
    CREATE TRIGGER after_user_insert
    AFTER INSERT ON users
    FOR EACH ROW
    BEGIN
        DECLARE EXIT HANDLER FOR SQLEXCEPTION
        BEGIN
            DO GET_LOCK(CONCAT('user_root_folder_', NEW.id), 10);
        END;
        INSERT INTO folders (name, parent_id, user_id, path) 
        VALUES ('根目录', 0, NEW.id, '/')
        ON DUPLICATE KEY UPDATE folders.id = folders.id; -- 明确指定folders表的id
    END//
    DELIMITER ;

    -- 定时清理回收站事件
    DROP EVENT IF EXISTS clean_deleted_files;
    DELIMITER //
    CREATE EVENT IF NOT EXISTS clean_deleted_files
    ON SCHEDULE EVERY 1 DAY STARTS TIMESTAMP(CURRENT_DATE, '02:00:00')
    DO
    BEGIN
        DECLARE done INT DEFAULT FALSE;
        DECLARE file_id_val BIGINT;
        DECLARE folder_id_val BIGINT;
        
        DECLARE file_cursor CURSOR FOR 
            SELECT id FROM files 
            WHERE is_deleted = 1 AND updated_time < DATE_SUB(NOW(), INTERVAL 30 DAY);
        
        DECLARE folder_cursor CURSOR FOR 
            SELECT id FROM folders 
            WHERE is_deleted = 1 AND updated_time < DATE_SUB(NOW(), INTERVAL 30 DAY);
        
        DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
        
        START TRANSACTION;
        
        -- 删除过期文件
        OPEN file_cursor;
        file_loop: LOOP
            FETCH file_cursor INTO file_id_val;
            IF done THEN LEAVE file_loop; END IF;
            DELETE FROM files WHERE id = file_id_val;
        END LOOP;
        CLOSE file_cursor;
        
        SET done = FALSE;
        
        -- 删除过期文件夹
        OPEN folder_cursor;
        folder_loop: LOOP
            FETCH folder_cursor INTO folder_id_val;
            IF done THEN LEAVE folder_loop; END IF;
            DELETE FROM folders WHERE id = folder_id_val;
        END LOOP;
        CLOSE folder_cursor;
        
        COMMIT;
    END//
    DELIMITER ;

    -- 启用事件调度器
    SET GLOBAL event_scheduler = ON;

    -- 插入默认管理员
    -- 插入默认管理员
    INSERT INTO users (id, email, password, nickname, gender, phone, role, storage_quota, status) 
    VALUES (UUID(), 'admin@leafpan.com', '$2a$10$N.zmdr9k7uOCQb376NoUnuTJ8iAt6Z5EHsM8lE9lBOsl7iKTVEFDa', '系统管理员', 0, '13800138000', 1, 107374182400, 1)
    ON DUPLICATE KEY UPDATE users.id = users.id; -- 明确指定users表的id

    -- 为管理员创建根目录
    INSERT INTO folders (name, parent_id, user_id, path) 
    SELECT '根目录', 0, users.id, '/' FROM users WHERE email = 'admin@leafpan.com'
    ON DUPLICATE KEY UPDATE folders.id = folders.id; -- 明确指定folders表的id

---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
  namespace: leafpan
type: Opaque
data:
  # Base64编码的密码: leafpan123
  mysql-root-password: bGVhZnBhbjEyMw==
  mysql-user: bGVhZnBhbg==
  mysql-password: bGVhZnBhbjEyMw==



---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: leafpan
  labels:
    app: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:8.0
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-root-password
        - name: MYSQL_DATABASE
          value: leafpan
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-user
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-password
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - mysqladmin
            - ping
            - -h
            - localhost
            - -u
            - root
            - -p$(MYSQL_ROOT_PASSWORD)
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - mysql
            - -h
            - localhost
            - -u
            - root
            - -p$(MYSQL_ROOT_PASSWORD)
            - -e
            - "SELECT 1;"
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 3
        volumeMounts:
        - name: init-script
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: init-script
        configMap:
          name: mysql-init-script

---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
  namespace: leafpan
spec:
  selector:
    app: mysql
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
  type: ClusterIP